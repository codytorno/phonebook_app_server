{"version":3,"sources":["components/Person.js","components/People.js","components/InputFilter.js","components/InputPerson.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Person","person","onDeleteClick","name","number","onClick","e","People","people","filterValue","handlePeopleChange","peopleToShow","filter","toUpperCase","includes","map","InputFilter","onValueChange","value","onChange","initialValues","InputPerson","addPersonHandled","updatePersonHandled","useState","newPerson","setNewPerson","console","log","handleInputChange","target","type","personToAdd","matchingPerson","find","window","confirm","alert","addPersonEvent","NotificationWrapper","styled","div","Notification","message","baseURL","getAll","axios","get","then","response","data","pbService","createNew","post","deleteItem","id","delete","updateItem","put","App","setPeople","setFilterValue","notification","setNotification","useEffect","pBService","event","preventDefault","addedperson","concat","setTimeout","catch","error","updatedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2df586c2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({ person, onDeleteClick }) => {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number}\r\n      <button onClick={(e) => onDeleteClick(e, person)}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst People = ({ people, filterValue, handlePeopleChange }) => {\r\n  const peopleToShow =\r\n    filterValue === \"\"\r\n      ? people\r\n      : people.filter((person) =>\r\n          person.name.toUpperCase().includes(filterValue.toUpperCase())\r\n        );\r\n  return (\r\n    <div>\r\n      {peopleToShow.map((person) => (\r\n        <Person\r\n          key={person.name}\r\n          person={person}\r\n          onDeleteClick={handlePeopleChange}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React from \"react\";\r\n\r\nconst InputFilter = ({ filterValue, onValueChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={filterValue} onChange={onValueChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputFilter;\r\n","import React, { useState } from \"react\";\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst InputPerson = ({ addPersonHandled, updatePersonHandled, people }) => {\r\n  const [newPerson, setNewPerson] = useState(initialValues);\r\n\r\n  console.log(\"InputPerson Component Updated!\");\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewPerson({\r\n      ...newPerson,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // internal event handler\r\n  // does all the checks needed and then calls necessary app event\r\n  const addPersonEvent = (e, personToAdd) => {\r\n    // check if any value is blank\r\n    if (!personToAdd.name) {\r\n      alert(\"Name can not be empty\");\r\n      return;\r\n    }\r\n    if (!personToAdd.number) {\r\n      alert(\"Number can not be empty\");\r\n      return;\r\n    }\r\n\r\n    // if person already exists request updating phone number\r\n    let matchingPerson = people.find(\r\n      (person) => person.name.toUpperCase() === personToAdd.name.toUpperCase()\r\n    );\r\n\r\n    if (!matchingPerson) {\r\n      addPersonHandled(e, personToAdd);\r\n    } else {\r\n      let confirm = window.confirm(\r\n        `${personToAdd.name} is already in the phonebook, replace the old number with updated number?`\r\n      );\r\n      if (confirm) {\r\n        matchingPerson.number = personToAdd.number;\r\n        updatePersonHandled(e, matchingPerson);\r\n      }\r\n    }\r\n\r\n    // set form to empty\r\n    setNewPerson(initialValues);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        name:\r\n        <input\r\n          value={newPerson.name}\r\n          onChange={handleInputChange}\r\n          name=\"name\"\r\n        />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input\r\n          value={newPerson.number}\r\n          onChange={handleInputChange}\r\n          name=\"number\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={(e) => addPersonEvent(e, newPerson)}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputPerson;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NotificationWrapper = styled.div`\r\n  background: lightgray;\r\n  position: absolute;\r\n  color: green;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  right: 10px;\r\n  padding: 5px;\r\n  border: 3px solid;\r\n  border-radius: 3px;\r\n  border-color: green;\r\n`;\r\n\r\nconst Notification = ({ message }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return <NotificationWrapper>{message}</NotificationWrapper>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseURL = \"/api/persons\";\r\n\r\n// Gets all elements on the json in base url\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\n// Adds a element to the json, letting it give an id value\r\nconst createNew = (person) => {\r\n  const request = axios.post(baseURL, person);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\n// removes element from json by id\r\nconst deleteItem = (id) => {\r\n  axios.delete(`${baseURL}/${id}`);\r\n  return getAll();\r\n};\r\n\r\n// updating element in json by id and given object to replace it with\r\nconst updateItem = (person) => {\r\n  const request = axios.put(`${baseURL}/${person.id}`, person);\r\n  return request.then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n\r\n// export methods\r\nconst pbService = { getAll, createNew, deleteItem, updateItem };\r\nexport default pbService;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport People from \"./components/People\";\r\nimport InputFilter from \"./components/InputFilter\";\r\nimport InputPerson from \"./components/InputPerson\";\r\nimport Notification from \"./components/Notification\";\r\nimport pBService from \"./services/phonebook\";\r\n\r\nconst App = () => {\r\n  const [people, setPeople] = useState([]);\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  // gets data from json server on first load\r\n  useEffect(() => {\r\n    console.log(\"Getting data\");\r\n    pBService.getAll().then((people) => {\r\n      setPeople(people);\r\n    });\r\n  }, []);\r\n\r\n  // event Handler => delete person from json\r\n  const handleDeleteClick = (e, person) => {\r\n    e.preventDefault();\r\n    // verify you want that person removed\r\n    if (window.confirm(`Are you sure you want to delete ${person.name}`)) {\r\n      // set state to update people after deleting this person\r\n      // delete\r\n      pBService\r\n        .deleteItem(person.id)\r\n        .then((people) => {\r\n          setPeople(people);\r\n        })\r\n        .then(() => {\r\n          setNotification(`Deleted ${person.name} from phonebook`);\r\n          setTimeout(() => setNotification(null), 3000);\r\n        });\r\n    }\r\n  };\r\n\r\n  // event Handler => adds person to json\r\n  const handleAddClick = (event, person) => {\r\n    event.preventDefault();\r\n    pBService\r\n      .createNew(person)\r\n      .then((addedperson) => {\r\n        setPeople(people.concat(addedperson));\r\n      })\r\n      .then(() => {\r\n        setNotification(`Added ${person.name} to phonebook`);\r\n        setTimeout(() => setNotification(null), 3000);\r\n        return;\r\n      })\r\n      .catch((error) => {\r\n        // display the error to the user\r\n        setNotification(error.response.data);\r\n        setTimeout(() => setNotification(null), 3000);\r\n        return;\r\n      });\r\n  };\r\n\r\n  // event Handler => updates a person that is already present in json\r\n  const handleUpdatePerson = (event, person) => {\r\n    event.preventDefault();\r\n    pBService\r\n      .updateItem(person)\r\n      .then((updatedPerson) => {\r\n        setPeople(\r\n          people.map((person) =>\r\n            person.id !== updatedPerson.id ? person : updatedPerson\r\n          )\r\n        );\r\n      })\r\n      .then(() => {\r\n        setNotification(`Updated ${person.name} in phonebook`);\r\n        setTimeout(() => setNotification(null), 3000);\r\n      })\r\n      .catch((error) => {\r\n        setNotification(\r\n          `Note '${person.name}' was already removed from server`\r\n        );\r\n        setTimeout(() => setNotification(null), 5000);\r\n      });\r\n  };\r\n\r\n  // event Handler => updates the state input everytime the input is changed\r\n  const handleFilterChange = (event) => {\r\n    let value = event.target.value;\r\n    setFilterValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <InputFilter value={filterValue} onValueChange={handleFilterChange} />\r\n      <h2> add a new</h2>\r\n      <InputPerson\r\n        addPersonHandled={handleAddClick}\r\n        updatePersonHandled={handleUpdatePerson}\r\n        people={people}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <People\r\n        people={people}\r\n        filterValue={filterValue}\r\n        handlePeopleChange={handleDeleteClick}\r\n      />\r\n      <Notification message={notification} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}